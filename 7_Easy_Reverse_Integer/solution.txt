Reverse digits of an integer.

Example1: x = 123, return 321
Example2: x = -123, return -321

click to show spoilers.

Note:
The input is assumed to be a 32-bit signed integer. Your function should return 0 when the reversed integer overflows.
int reverse(int x)
{
	int answer = 0;
	int step[10] = {0};
	int i = 0;
	int pos_x = 0;
	int last_no_zero = 0;
	bool neg = false;
	int pos_max[10] = {2, 1, 4, 7, 4, 8, 3, 6, 4, 7};
    
    if (-2147483648 == x)
    {
        return 0;
    }

	pos_x = ((0 - x) > x) ? (0 - x) : x;
	neg = ((0 - x) > x) ? true : false;

	for (i = 0; i < 10; i++)
	{
		step[i] = pos_x - ((pos_x/10) * 10);
		pos_x = pos_x/10;
		if (0 == pos_x)
		{
			last_no_zero = i;
			break;
		}
	}

	if (9 == last_no_zero)
	{
		for (i = 0; i < 10; i++)
		{
			if (step[i] < pos_max[i])
			{
				break;
			}
			else if (step[i] > pos_max[i])
			{
				return 0;
			}
		}
	}

	for (i = 0; i <= last_no_zero; i++)
	{
		answer = answer * 10 + step[i];
	}

	if (neg)
	{
		answer = 0 - answer;
	}

	return answer;
}
